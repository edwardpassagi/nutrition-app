import generateAIAction as g_act
from generateAIAction import linkFoodIdToMealId

mealNameBase = ["Breakfast","Lunch","Dinner","Snack"]

def generatePlanAI(planName: str, numMeal:int ):
    """Generate `numMeal` amount of meals, that is based on the planName

    Args:
        planName (str): The name of the plan (i.e. Workout, Diet)
        numMeal (int): The number of meals that will be generated by our ai

    Returns:
        mealIDs (list): List of meal IDs that is generated by the plan
    """
    # FIXME: hardcode nummeal if its not between 0-3
    if numMeal > 4 or numMeal <= 0: numMeal = 3

    # FIXME: Plan calories is still hardcoded to 5000
    planCalories = 5000

    # TODO: Generate a plan
    planID = g_act.createNewPlanSQL(planName, planCalories)

    # TODO: Link plan with all of the meals
    mealIDs = []
    for eachMeal in range(numMeal):
        mealID = generateMeal(planName, eachMeal)
        g_act.linkMealIDtoPlanID(planID, mealID)

    return

def generateMeal(planName: str, mealNum: int):
    """Generate Meal based on the name of the plan

    Args:
        planName (str): The name of the plan
        mealName (str): Current meal number

    Returns:
        mealID (list): returns the newly created mealID after its linked to the foods len(mealID) is either 3 / 4 (randomized)
    """
    numFoods = 3
    foodIDs = []
    mealName = planName + " " + mealNameBase[mealNum]
    print("mealname: {}".format(mealName))

    # FIXME: calorieTotal should sum all calories from food
    calorieTotal = 500

    # TODO: make new meal that consists of all the foodIDs, catch error
    mealID = g_act.createNewMealSQL(mealName, calorieTotal)

    # TODO: link mealID with all of the foodID
    for eachFood in range(numFoods):
        foodID = generateFood(planName)
        g_act.linkFoodIdToMealId(mealID,foodID)

    return mealID


def generateFood(planName: str):
    """ Find a singular foodID that matches the theme of the planName

    Args:
        planName (str): The name of the plan
    
    Returns:
        foodID (int): The ID of the food that corresponds to the theme of the planName.
    """

    "STEAK ABALLONE"

    # TODO: IMPLEMENT AI ALGORITHM HERE
    # .....

    
    return 5;